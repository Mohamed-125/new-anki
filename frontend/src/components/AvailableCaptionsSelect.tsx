import React from "react";
import { availableCaption } from "./AddVideoModal";
import getYouTubeVideoId from "../utils/getYoutubeVideoId";
import axios from "axios";
import { CaptionType } from "../pages/video/Video";
import { VideoType } from "../pages/Playlist";

const AvailableCaptionsSelect = ({
  availableCaptions,
  value,
  setIsCaptionLoading,
  setSelectedCaption,
  setCaption,
  video,
}: {
  availableCaptions: availableCaption[];
  value?: string;
  setIsCaptionLoading?: React.Dispatch<React.SetStateAction<boolean>>;
  setSelectedCaption: React.Dispatch<React.SetStateAction<string>>;
  setCaption?: React.Dispatch<React.SetStateAction<CaptionType[]>>;
  video?: VideoType;
}) => {
  const handleCaptionChange = (e: any) => {
    setSelectedCaption(e.target.value);
    if (video?.defaultCaptionData.name === e.target.value) {
      if (
        video &&
        video.defaultCaptionData &&
        video.defaultCaptionData.transcript
      ) {
        setCaption?.(
          video.defaultCaptionData.transcript as unknown as CaptionType[]
        );
      }
    } else {
      setIsCaptionLoading?.(true);
      const videoId = getYouTubeVideoId(video?.url || "");

      axios
        .get(
          `/video/getTranscript?videoId=${videoId}&lang=${e.target.value.trim()}`
        )
        .then((res) => {
          setCaption?.(res.data);
        })
        .catch((err) => {})
        .finally(() => setIsCaptionLoading?.(false));
    }
  };

  return (
    <select
      name="video_subtitle"
      value={value}
      onChange={handleCaptionChange}
      className="w-full px-4 py-3 border border-gray-300 rounded-lg"
    >
      {availableCaptions?.map((caption, index) => (
        <option value={caption.name} key={index}>
          {caption.name +
            `${caption.isAutoGenerated ? " (auto-generated)" : ""}`}
        </option>
      ))}
    </select>
  );
};

export default AvailableCaptionsSelect;
